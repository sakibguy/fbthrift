#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

import typing as _typing

import thrift.py3lite.types as _fbthrift_py3lite_types
import thrift.py3lite.exceptions as _fbthrift_py3lite_exceptions


class Fiery(_fbthrift_py3lite_exceptions.GeneratedError):
    message: _typing.Final[_typing.Optional[str]] = ...
    def __init__(
        self, *,
        message: _typing.Optional[str]=...
    ) -> None: ...

    def __iter__(self) -> typing.Iterator[typing.Tuple[str, _typing.Union[None, str]]]: ...


class Serious(_fbthrift_py3lite_exceptions.GeneratedError):
    sonnet: _typing.Final[_typing.Optional[str]] = ...
    def __init__(
        self, *,
        sonnet: _typing.Optional[str]=...
    ) -> None: ...

    def __iter__(self) -> typing.Iterator[typing.Tuple[str, _typing.Union[None, str]]]: ...


class ComplexFieldNames(_fbthrift_py3lite_exceptions.GeneratedError):
    error_message: _typing.Final[str] = ...
    internal_error_message: _typing.Final[str] = ...
    def __init__(
        self, *,
        error_message: _typing.Optional[str]=...,
        internal_error_message: _typing.Optional[str]=...
    ) -> None: ...

    def __iter__(self) -> typing.Iterator[typing.Tuple[str, _typing.Union[None, str, str]]]: ...


class CustomFieldNames(_fbthrift_py3lite_exceptions.GeneratedError):
    error_message: _typing.Final[str] = ...
    internal_error_message: _typing.Final[str] = ...
    def __init__(
        self, *,
        error_message: _typing.Optional[str]=...,
        internal_error_message: _typing.Optional[str]=...
    ) -> None: ...

    def __iter__(self) -> typing.Iterator[typing.Tuple[str, _typing.Union[None, str, str]]]: ...


class ExceptionWithPrimitiveField(_fbthrift_py3lite_exceptions.GeneratedError):
    message: _typing.Final[str] = ...
    error_code: _typing.Final[int] = ...
    def __init__(
        self, *,
        message: _typing.Optional[str]=...,
        error_code: _typing.Optional[int]=...
    ) -> None: ...

    def __iter__(self) -> typing.Iterator[typing.Tuple[str, _typing.Union[None, str, int]]]: ...


class Banal(_fbthrift_py3lite_exceptions.GeneratedError):
    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> typing.Iterator[typing.Tuple[str, _typing.Union[None]]]: ...
