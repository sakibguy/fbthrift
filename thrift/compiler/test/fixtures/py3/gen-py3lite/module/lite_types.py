#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#
import enum

import thrift.py3lite.types as _fbthrift_py3lite_types
import thrift.py3lite.exceptions as _fbthrift_py3lite_exceptions


class AnEnum(enum.Enum):
    NOTSET = 0
    ONE = 1
    TWO = 2
    THREE = 3
    FOUR = 4


class Flags(enum.Flag):
    flag_A = 1
    flag_B = 2
    flag_C = 4
    flag_D = 8


class SimpleException(metaclass=_fbthrift_py3lite_exceptions.GeneratedErrorMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            True,  # isUnqualified
            "err_code",  # name
            _fbthrift_py3lite_types.typeinfo_i16,  # typeinfo
            None,  # default value
        ),
    )


class OptionalRefStruct(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "optional_blob",  # name
            _fbthrift_py3lite_types.typeinfo_binary,  # typeinfo
            None,  # default value
        ),
    )


class SimpleStruct(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            True,  # isUnqualified
            "is_on",  # name
            _fbthrift_py3lite_types.typeinfo_bool,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "tiny_int",  # name
            _fbthrift_py3lite_types.typeinfo_byte,  # typeinfo
            None,  # default value
        ),
        (
            3,  # id
            True,  # isUnqualified
            "small_int",  # name
            _fbthrift_py3lite_types.typeinfo_i16,  # typeinfo
            None,  # default value
        ),
        (
            4,  # id
            True,  # isUnqualified
            "nice_sized_int",  # name
            _fbthrift_py3lite_types.typeinfo_i32,  # typeinfo
            None,  # default value
        ),
        (
            5,  # id
            True,  # isUnqualified
            "big_int",  # name
            _fbthrift_py3lite_types.typeinfo_i64,  # typeinfo
            None,  # default value
        ),
        (
            6,  # id
            True,  # isUnqualified
            "real",  # name
            _fbthrift_py3lite_types.typeinfo_double,  # typeinfo
            None,  # default value
        ),
        (
            7,  # id
            True,  # isUnqualified
            "smaller_real",  # name
            _fbthrift_py3lite_types.typeinfo_float,  # typeinfo
            None,  # default value
        ),
        (
            8,  # id
            True,  # isUnqualified
            "hidden_field",  # name
            _fbthrift_py3lite_types.typeinfo_i16,  # typeinfo
            None,  # default value
        ),
    )


class ComplexStruct(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            True,  # isUnqualified
            "structOne",  # name
            lambda: _fbthrift_py3lite_types.StructTypeInfo(SimpleStruct),  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "structTwo",  # name
            lambda: _fbthrift_py3lite_types.StructTypeInfo(SimpleStruct),  # typeinfo
            None,  # default value
        ),
        (
            3,  # id
            True,  # isUnqualified
            "an_integer",  # name
            _fbthrift_py3lite_types.typeinfo_i32,  # typeinfo
            None,  # default value
        ),
        (
            4,  # id
            True,  # isUnqualified
            "name",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
        (
            5,  # id
            True,  # isUnqualified
            "an_enum",  # name
            lambda: _fbthrift_py3lite_types.EnumTypeInfo(AnEnum),  # typeinfo
            None,  # default value
        ),
        (
            6,  # id
            True,  # isUnqualified
            "some_bytes",  # name
            _fbthrift_py3lite_types.typeinfo_binary,  # typeinfo
            None,  # default value
        ),
        (
            7,  # id
            True,  # isUnqualified
            "sender",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
        (
            8,  # id
            True,  # isUnqualified
            "cdef_",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
        (
            9,  # id
            True,  # isUnqualified
            "bytes_with_cpp_type",  # name
            _fbthrift_py3lite_types.typeinfo_binary,  # typeinfo
            None,  # default value
        ),
    )


class BinaryUnion(metaclass=_fbthrift_py3lite_types.UnionMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            True,  # isUnqualified
            "iobuf_val",  # name
            _fbthrift_py3lite_types.typeinfo_binary,  # typeinfo
            None,  # default value
        ),
    )


class BinaryUnionStruct(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            True,  # isUnqualified
            "u",  # name
            lambda: _fbthrift_py3lite_types.StructTypeInfo(BinaryUnion),  # typeinfo
            None,  # default value
        ),
    )


_fbthrift_py3lite_types.fill_specs(
    SimpleException,
    OptionalRefStruct,
    SimpleStruct,
    ComplexStruct,
    BinaryUnion,
    BinaryUnionStruct,
)


A_BOOL = True

A_BYTE = 8

THE_ANSWER = 42

A_NUMBER = 84

A_BIG_NUMBER = 102

A_REAL_NUMBER = float(3.14)

A_FAKE_NUMBER = 3.0

A_WORD = "Good word"

SOME_BYTES = b"bytes"

A_STRUCT = SimpleStruct(is_on=True, tiny_int=5, small_int=6, nice_sized_int=7, big_int=8, real=float(9.9))

WORD_LIST = ("the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog", )

SOME_MAP = ({1: float(1.1), 2: float(2.2)}, {3: float(3.3)}, )

DIGITS = (1, 2, 3, 4, 5, )

A_CONST_MAP = {"simple": SimpleStruct(is_on=False, tiny_int=50, small_int=61, nice_sized_int=72, big_int=83, real=float(99.9))}

IOBufPtr = bytes
IOBuf = bytes
foo_bar = bytes
