{{!

  Copyright (c) Facebook, Inc. and its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}{{!
Generated Python classes for Thrift types
}}
{{> common/AutoGeneratedPy}}
{{#program:enums?}}
import enum

{{/program:enums?}}
import thrift.py3lite.types as _fbthrift_py3lite_types
import thrift.py3lite.exceptions as _fbthrift_py3lite_exceptions
{{#program:include_namespaces}}
{{#has_types?}}

import {{#include_namespace}}{{value}}.{{/include_namespace}}lite_types as _{{#include_namespace}}{{value}}_{{/include_namespace}}lite_types
{{/has_types?}}
{{/program:include_namespaces}}
{{#program:enums}}


class {{enum:name}}(enum.{{!
        }}{{#enum:flags?}}Flag{{/enum:flags?}}{{!
        }}{{^enum:flags?}}Enum{{/enum:flags?}}):
    {{#enum:values}}
    {{enum_value:py_name}} = {{enum_value:value}}
    {{/enum:values}}
    {{^enum:values}}
    pass
    {{/enum:values}}
{{/program:enums}}
{{#program:structs}}


class {{struct:name}}(metaclass={{!
        }}{{#struct:union?}}_fbthrift_py3lite_types.UnionMeta{{/struct:union?}}{{!
        }}{{^struct:union?}}{{!
        }}{{#struct:exception?}}_fbthrift_py3lite_exceptions.GeneratedErrorMeta{{/struct:exception?}}{{!
        }}{{^struct:exception?}}_fbthrift_py3lite_types.StructMeta{{/struct:exception?}}{{!
        }}{{/struct:union?}}{{!
        }}):
    _fbthrift_SPEC = (
        {{#struct:fields_and_mixin_fields}}
        (
            {{field:key}},  # id
            {{#field:opt_in_req_out?}}True{{/field:opt_in_req_out?}}{{!
            }}{{^field:opt_in_req_out?}}False{{/field:opt_in_req_out?}},  # isUnqualified
            "{{field:py_name}}",  # name
            {{#field:type}}{{^type:base?}}lambda: {{/type:base?}}{{ >types/typeinfo }}{{/field:type}},  # typeinfo
            {{#field:value}}{{#field:type}}{{^type:base?}}lambda: {{/type:base?}}{{/field:type}}{{> types/constant_value }}{{/field:value}}{{!
            }}{{^field:value}}None{{/field:value}},  # default value
        ),
        {{/struct:fields_and_mixin_fields}}
    )
    {{#struct:exception?}}
    {{#struct:exception_message?}}

    def __str__(self):
        field = self.{{struct:exception_message}}
        if field is None:
            {{! optional field, stringify }}
            return str(field)
        return field

    {{/struct:exception_message?}}
    {{/struct:exception?}}
{{/program:structs}}
{{#program:structs?}}


_fbthrift_py3lite_types.fill_specs(
    {{#program:structs}}
    {{struct:name}},
    {{/program:structs}}
)
{{/program:structs?}}
{{#program:constants?}}

{{#program:constants}}

{{constant:name}} = {{#constant:value}}{{> types/constant_value}}{{/constant:value}}
{{/program:constants}}
{{/program:constants?}}
{{#program:typedefs?}}

{{#program:typedefs}}
{{typedef:name}} = {{#typedef:type}}{{> types/PythonType}}{{/typedef:type}}
{{/program:typedefs}}
{{/program:typedefs?}}
